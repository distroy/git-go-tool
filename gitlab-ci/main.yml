include:
  - '/gitlab-ci/go-check.yml'

stages:
  # stage 和 stage 之间按照顺序串行执行
  # 相同stage的job并行执行
  - go-check-stage

# 环境变量
variables:
  GO111MODULE: "on"
  TZ: Asia/Shanghai

  # 用来运行的镜像
  GO_CHECK_IMAGE: 'ubuntu-latest'

  # git flags
  GIT_COMPARE_MODE: "diff"

  # go flags
  GO_FLAGS: "-mod=vendor"
  GO_TEST_FLAGS: "-gcflags=all=-l"
  GO_EXCLUDE_OPTIONS: -exclude '^vendor/'

  # go buile variables
  GO_BUILD_TARGET_DIR: "$CI_PROJECT_DIR/app"

  # go coverage variables
  GO_COVERAGE_DIFF_TARGET: "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  GO_COVERAGE_DIFF_SOURCE: "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
  GO_COVERAGE_FILE: "$CI_PROJECT_DIR/log/coverage.out"
  GO_COVERAGE_RATE: "0.65"
  # GO_COVERAGE_EXCLUDES: ""

  # go cognitive variables
  GO_COGNITIVE_DIFF_TARGET: "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  GO_COGNITIVE_DIFF_SOURCE: "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
  GO_COGNITIVE_OVER: "15"
  # GO_COGNITIVE_EXCLUDES: ""

  FOR_TEST_KEYWORD: todo\s*for\s*test

go-build-job:
  extends:
    - .go-build

go-cognitive-job:
  extends:
    - .go-cognitive

go-test-job:
  extends:
    - .go-test

go-test-coverage-job:
  extends:
    - .go-test-coverage

check-for-test-job:
  extends:
    - .check-for-test
